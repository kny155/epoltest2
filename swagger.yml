swagger: "2.0"
info:
  title: Epol Test
  description: 'This is a sample server '
  termsOfService: http://swagger.io/terms/
  contact:
    email: kny.5298@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
tags:
- name: users
  description: Operations about user
paths:
  /users:
    post:
      tags:
      - users
      summary: Create user
      parameters:
      - in: "body"
        name: "body"
        schema:
          $ref: '#/definitions/CreateUser'
        required: true
      responses:
        200:
          description: successful operation'
          schema:
            items:
              $ref: '#/definitions/User'
        405:
          description: "Invalid input"
    get:
      tags:
      - users
      summary: Get users 
      responses:
        200:
          description: successful operation'
          schema:
            items:
              $ref: '#/definitions/User'
  /users/{userId}:
    get:
      tags:
      - users
      summary: Get user by userId
      parameters:
      - name: userId
        in: path
        description: 'The userId that needs to be fetched.'
        required: true
        type: string
        pattern: "^[a-f\d]{24}$"
      responses:
        200:
          description: successful operation
          schema:
              $ref: '#/definitions/User'
        400:
          description: Invalid userId supplied
        404:
          description: User not found
    put:
      tags:
      - users
      summary: Updated user
      parameters:
      - name: userId
        in: path
        description: 'The userId that needs to be updated.'
        required: true
        type: string
        pattern: "^[a-f\d]{24}$"
      - in: "body"
        name: "body"
        schema:
          $ref: '#/definitions/CreateUser'
        required: true
      responses:
        200:
          description: successful operation
          schema:
            items:
              $ref: '#/definitions/User'
        400:
          description: Invalid user supplied
        404:
          description: User not found
    delete:
      tags:
      - users
      summary: Delete user
      parameters:
      - name: userId
        in: path
        description: 'The userId that needs to be deleted'
        required: true
        type: string
        pattern: "^[a-f\d]{24}$"
      responses:
        200:
          description: successful operation
          schema:
            items:
              $ref: '#/definitions/User'
        400:
          description: Invalid username supplied
        404:
          description: User not found
definitions:
    CreateUser:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        organizationName:
          type: string
    User:
      type: object
      properties:
        _id:
          type: object
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        organizationName:
          type: string
        __v:
          type: integer
